---
import { CollectionEntry, getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro"; 
import getUniqueTags from "@utils/getUniqueTags"; 
import Container from "@components/container.astro";
import Sectionhead from "@components/sectionhead.astro"; 
import BlogPost from "@components/ui/blogpost.astro";
import getPostsByTag from "@utils/getPostsByTag";

export interface Props {
  post: CollectionEntry<"blog">;
  tag: string;
}

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  const tags = getUniqueTags(posts);
  return tags.map(tag => {
    return {
      params: { tag },
      props: { tag },
    };
  });
}

const { tag } = Astro.props;
const posts = await getCollection("blog", ({ data }) => !data.draft);
const tagPosts = getPostsByTag(posts, tag);

// Sort content entries by publication date
tagPosts.sort(function (a, b) {
  return b.data.publishDate.valueOf() - a.data.publishDate.valueOf();
});
---

<Layout title={`Tag:${tag}`} description={tag}
image="/images/affiche_seo.png">
    <Container>
        <Sectionhead>
          <Fragment slot="title">Our Blog</Fragment>
          <Fragment slot="desc">All the articles with the tag #{tag}.</Fragment> 
        </Sectionhead>
        <main class="mt-16">
            <ul class="grid gap-16 max-w-4xl mx-auto md:gap-10 items-center">
                {
                    tagPosts.map((((data, index) => (
                        <BlogPost  
                            index={index} 
                            blogPostEntry={data}
                        />
                    ))))
                }         
            </ul>
        </main>
    </Container>
</Layout>
